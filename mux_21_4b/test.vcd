$date
	Sun May 22 19:58:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! RES [3:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 1 $ sel $end
$scope module my_mux4 $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 $ sel $end
$var wire 4 ' RES [3:0] $end
$scope module my_mux1[0] $end
$var wire 1 ( a $end
$var wire 1 ) a_out $end
$var wire 1 * b $end
$var wire 1 + b_out $end
$var wire 1 , not_sel $end
$var wire 1 - res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[1] $end
$var wire 1 . a $end
$var wire 1 / a_out $end
$var wire 1 0 b $end
$var wire 1 1 b_out $end
$var wire 1 2 not_sel $end
$var wire 1 3 res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[2] $end
$var wire 1 4 a $end
$var wire 1 5 a_out $end
$var wire 1 6 b $end
$var wire 1 7 b_out $end
$var wire 1 8 not_sel $end
$var wire 1 9 res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[3] $end
$var wire 1 : a $end
$var wire 1 ; a_out $end
$var wire 1 < b $end
$var wire 1 = b_out $end
$var wire 1 > not_sel $end
$var wire 1 ? res $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x?
x>
x=
0<
x;
0:
x9
x8
x7
16
x5
04
x3
x2
x1
00
x/
1.
x-
x,
x+
1*
x)
1(
bx '
b101 &
b11 %
0$
b101 #
b11 "
bx !
$end
#1
1,
12
18
1>
#3
05
0;
0=
07
01
0+
#4
1)
1/
#6
0?
b0xx !
b0xx '
09
#7
1-
b11 !
b11 '
13
#10
