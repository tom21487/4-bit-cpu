$date
	Mon May 23 08:54:07 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! SUM [3:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$scope module rca0 $end
$var wire 4 $ A [3:0] $end
$var wire 4 % B [3:0] $end
$var wire 1 & c_out3 $end
$var wire 1 ' c_out2 $end
$var wire 1 ( c_out1 $end
$var wire 1 ) c_out0 $end
$var wire 4 * SUM [3:0] $end
$scope module fa0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - c_in $end
$var wire 1 ) c_out $end
$var wire 1 . sum $end
$var wire 1 / w0 $end
$var wire 1 0 w1 $end
$var wire 1 1 w2 $end
$upscope $end
$scope module fa1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 ) c_in $end
$var wire 1 ( c_out $end
$var wire 1 4 sum $end
$var wire 1 5 w0 $end
$var wire 1 6 w1 $end
$var wire 1 7 w2 $end
$upscope $end
$scope module fa2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ( c_in $end
$var wire 1 ' c_out $end
$var wire 1 : sum $end
$var wire 1 ; w0 $end
$var wire 1 < w1 $end
$var wire 1 = w2 $end
$upscope $end
$scope module fa3 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ' c_in $end
$var wire 1 & c_out $end
$var wire 1 @ sum $end
$var wire 1 A w0 $end
$var wire 1 B w1 $end
$var wire 1 C w2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xC
xB
xA
x@
0?
0>
x=
x<
x;
x:
19
08
x7
x6
x5
x4
03
12
x1
x0
x/
x.
0-
0,
1+
bx *
x)
x(
x'
x&
b100 %
b11 $
b100 #
b11 "
bx !
$end
#3
00
06
0<
0B
01
#4
1/
15
1;
0A
#6
0)
#7
0C
#8
bx1 !
bx1 *
1.
#9
07
#10
0&
bx11 !
bx11 *
14
#12
0(
#15
0=
#16
bx111 !
bx111 *
1:
#18
0'
#22
b111 !
b111 *
0@
#40
1,
09
1?
02
18
b1001 #
b1001 %
b101 "
b101 $
#43
10
#44
0/
1A
05
#46
1)
#48
0.
b1110 !
b1110 *
1@
#80
19
0+
12
1>
b1101 #
b1101 %
b1110 "
b1110 $
#83
1<
00
1B
#84
0;
1/
15
0A
#86
1'
0)
1&
#88
0:
b1011 !
b1011 *
1.
#120
