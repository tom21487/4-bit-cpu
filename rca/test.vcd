$date
	Wed Aug 31 21:59:46 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! ovf $end
$var wire 4 " SUM [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$scope module rca0 $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 ! ovf $end
$var wire 1 ' c_out3 $end
$var wire 1 ( c_out2 $end
$var wire 1 ) c_out1 $end
$var wire 1 * c_out0 $end
$var wire 4 + SUM [3:0] $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . c_in $end
$var wire 1 * c_out $end
$var wire 1 / sum $end
$var wire 1 0 w0 $end
$var wire 1 1 w1 $end
$var wire 1 2 w2 $end
$upscope $end
$scope module fa1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 * c_in $end
$var wire 1 ) c_out $end
$var wire 1 5 sum $end
$var wire 1 6 w0 $end
$var wire 1 7 w1 $end
$var wire 1 8 w2 $end
$upscope $end
$scope module fa2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ) c_in $end
$var wire 1 ( c_out $end
$var wire 1 ; sum $end
$var wire 1 < w0 $end
$var wire 1 = w1 $end
$var wire 1 > w2 $end
$upscope $end
$scope module fa3 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 ( c_in $end
$var wire 1 ' c_out $end
$var wire 1 A sum $end
$var wire 1 B w0 $end
$var wire 1 C w1 $end
$var wire 1 D w2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xD
xC
xB
xA
0@
0?
x>
x=
x<
x;
1:
09
x8
x7
x6
x5
04
13
x2
x1
x0
x/
0.
0-
1,
bx +
x*
x)
x(
x'
b100 &
b11 %
b100 $
b11 #
bx "
x!
$end
#3
01
07
0=
0C
02
#4
10
16
1<
0B
#6
0*
#7
0D
#8
bx1 "
bx1 +
1/
#9
08
#10
0'
bx11 "
bx11 +
15
#12
0)
#15
0>
#16
bx111 "
bx111 +
1;
#18
0(
#22
b111 "
b111 +
0A
0!
#44
1-
0:
1@
03
19
b1001 $
b1001 &
b101 #
b101 %
#47
11
#48
00
1B
06
#50
1*
#52
0/
b1110 "
b1110 +
1A
#88
1:
0,
13
1?
b1101 $
b1101 &
b1110 #
b1110 %
#91
1=
01
1C
#92
0<
10
16
0B
#94
1(
0*
1'
#96
0;
b1011 "
b1011 +
1/
#132
0-
14
0@
1,
03
0?
b110 $
b110 &
b101 #
b101 %
#135
0C
#138
0'
#142
1!
#176
0:
1@
1?
b1010 $
b1010 &
b1101 #
b1101 %
#179
0=
1C
#180
1<
#182
0(
1'
#184
b1111 "
b1111 +
1;
#186
b111 "
b111 +
0A
#220
