$date
	Mon May 23 22:25:04 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! RES [3:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 1 $ sel $end
$scope module my_alu $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 $ sel $end
$var wire 4 ' W1 [3:0] $end
$var wire 4 ( W0 [3:0] $end
$var wire 4 ) RES [3:0] $end
$scope module mux4_0 $end
$var wire 4 * B [3:0] $end
$var wire 1 $ sel $end
$var wire 4 + RES [3:0] $end
$var wire 4 , A [3:0] $end
$scope module my_mux1[0] $end
$var wire 1 - a $end
$var wire 1 . a_out $end
$var wire 1 / b $end
$var wire 1 0 b_out $end
$var wire 1 1 not_sel $end
$var wire 1 2 res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[1] $end
$var wire 1 3 a $end
$var wire 1 4 a_out $end
$var wire 1 5 b $end
$var wire 1 6 b_out $end
$var wire 1 7 not_sel $end
$var wire 1 8 res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[2] $end
$var wire 1 9 a $end
$var wire 1 : a_out $end
$var wire 1 ; b $end
$var wire 1 < b_out $end
$var wire 1 = not_sel $end
$var wire 1 > res $end
$var wire 1 $ sel $end
$upscope $end
$scope module my_mux1[3] $end
$var wire 1 ? a $end
$var wire 1 @ a_out $end
$var wire 1 A b $end
$var wire 1 B b_out $end
$var wire 1 C not_sel $end
$var wire 1 D res $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope module rca0 $end
$var wire 4 E A [3:0] $end
$var wire 4 F B [3:0] $end
$var wire 1 G c_out3 $end
$var wire 1 H c_out2 $end
$var wire 1 I c_out1 $end
$var wire 1 J c_out0 $end
$var wire 4 K SUM [3:0] $end
$scope module fa0 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N c_in $end
$var wire 1 J c_out $end
$var wire 1 O sum $end
$var wire 1 P w0 $end
$var wire 1 Q w1 $end
$var wire 1 R w2 $end
$upscope $end
$scope module fa1 $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 J c_in $end
$var wire 1 I c_out $end
$var wire 1 U sum $end
$var wire 1 V w0 $end
$var wire 1 W w1 $end
$var wire 1 X w2 $end
$upscope $end
$scope module fa2 $end
$var wire 1 Y a $end
$var wire 1 Z b $end
$var wire 1 I c_in $end
$var wire 1 H c_out $end
$var wire 1 [ sum $end
$var wire 1 \ w0 $end
$var wire 1 ] w1 $end
$var wire 1 ^ w2 $end
$upscope $end
$scope module fa3 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 H c_in $end
$var wire 1 G c_out $end
$var wire 1 a sum $end
$var wire 1 b w0 $end
$var wire 1 c w1 $end
$var wire 1 d w2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xd
xc
xb
xa
0`
0_
x^
x]
x\
x[
1Z
0Y
xX
xW
xV
xU
0T
1S
xR
xQ
xP
xO
0N
0M
1L
bx K
xJ
xI
xH
xG
b100 F
b11 E
xD
xC
xB
1A
x@
x?
x>
x=
x<
1;
x:
x9
x8
x7
x6
15
x4
x3
x2
x1
x0
1/
x.
x-
bx ,
bx +
b1111 *
bx )
bx (
b1111 '
b100 &
b11 %
0$
b100 #
b11 "
bx !
$end
#1
11
17
1=
1C
#3
0Q
0W
0]
0c
0R
0B
0<
06
00
#4
1P
1V
1\
0b
#6
0J
#7
0d
#8
1-
bx1 (
bx1 ,
bx1 K
1O
#9
0X
#10
13
0G
bx11 (
bx11 ,
bx11 K
1U
#11
1.
#12
0I
#13
14
#14
bx1 !
bx1 )
bx1 +
12
#15
0^
#16
19
bx11 !
bx11 )
bx11 +
18
bx111 (
bx111 ,
bx111 K
1[
#18
0H
#19
1:
#22
0?
bx111 !
bx111 )
bx111 +
1>
b111 (
b111 ,
b111 K
0a
#25
0@
#28
b111 !
b111 )
b111 +
0D
#47
1$
#48
01
07
0=
0C
#50
10
16
1<
1B
#51
0.
04
0:
#53
b1111 !
b1111 )
b1111 +
1D
#94
